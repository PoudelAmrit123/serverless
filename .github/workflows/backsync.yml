name: gitback sync

on:
  push:
    branches:
      - uat

jobs:
  gitback-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Step 1: Checkout full repo
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Step 2: Configure Git
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Create or update uat-sync branch
      - name: Prepare uat-sync branch
        run: |
          TEMP_BRANCH="uat-sync"
          git fetch origin dev
          git fetch origin uat
          # Create or checkout uat-sync
          if git rev-parse --verify $TEMP_BRANCH >/dev/null 2>&1; then
            git checkout $TEMP_BRANCH
            git reset --hard origin/dev
          else
            git checkout -b $TEMP_BRANCH origin/dev
          fi
          # Merge UAT changes
          git merge origin/uat --no-ff -m "Sync changes from uat to dev"

      # Step 4: Push uat-sync branch
      - name: Push uat-sync branch
        run: |
          git push origin uat-sync --force-with-lease

      # Step 5: Create or get PR from uat-sync â†’ dev
      - name: Create or update PR
        id: pr
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          PR_EXISTS=$(gh pr list --base dev --head uat-sync --json number --jq '.[0].number')
          if [ -z "$PR_EXISTS" ]; then
            PR_URL=$(gh pr create --base dev --head uat-sync --title "Gitback Sync: uat -> dev" --body "Automated sync from uat to dev")
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
          else
            echo "pr_url=https://github.com/${{ github.repository }}/pull/$PR_EXISTS" >> $GITHUB_OUTPUT

      # Step 6: Auto-merge PR if mergeable
      - name: Auto-merge PR
        if: steps.pr.outputs.pr_url != ''
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          PR_NUM=$(gh pr view "${{ steps.pr.outputs.pr_url }}" --json number --jq '.number')
          MERGEABLE=$(gh pr view $PR_NUM --json mergeable --jq '.mergeable')
          if [ "$MERGEABLE" = "true" ]; then
            gh pr merge $PR_NUM --squash --delete-branch
          else
            echo "PR #$PR_NUM has conflicts. Manual merge required."
